<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="../../s3/node/file_system_connector.png"
		type="Source"
		xmlns="http://knime.org/node/v4.1"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">

    <name>Generic S3 Connector</name>
    
    <shortDescription>
        Provides a file system connection to an S3-compatible endpoint.
    </shortDescription>
    
    <fullDescription>
        <intro>
            <p>
            This node connects to services that provide an S3-compatible API endpoint, for example
            <a href="https://min.io/">MinIO</a>.
            The resulting output port allows downstream nodes to access the data behind the endpoint as a file system,
            e.g. to read or write files and folders, or to perform other file system operations (browse/list files, copy,
            move, ...). If you want to connect to Amazon S3 on AWS, please use the Amazon S3 Connector node instead. 
            </p>

            <p><b>Path syntax:</b> Paths for this file system are specified with a UNIX-like syntax, /mybucket/myfolder/myfile. An absolute
            consists of:
                <ol>
                    <li>A leading slash ("/").</li>
                    <li>Followed by the name of a bucket ("mybucket" in the above example), followed by a slash.</li>
                    <li>Followed by the name of an object within the bucket ("myfolder/myfile" in the above example).</li>
                </ol>
            </p>
            
            <p><b>URI formats:</b> When you apply the <i>Path to URI</i> node to paths coming from this connector, you can create 
            URIs with the following formats:
                <ol>
                    <li>
                    <b>Presigned https:// URLs</b> which contain credentials, that allow to access files for a certain amount of time
                    (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html">AWS documentation</a>).
                    </li>
                    <li>
                    <b>s3:// URLs</b> to access the S3-compatible endpoint with the <tt>aws</tt> command line interface, or from inside
                    Hadoop environments.
                    </li>
                </ol>
            </p>
        </intro>
        <tab name="Settings">
            <option name="Endpoint">
                <tt>http(s)</tt> URL of the S3-compatible service endpoint.
            </option>
            <option name="Authentication">
                The authentication to use:
                <ul>
                    <li><b>Anonymous:</b> Use anonymous credentials to make anonymous requests to the S3-compatible endpoint.</li>
                    <li>
                        <b>Access Key ID and Secret Access Key:</b> Use an access key ID and secret to authenticate. Check <i>Use
                        credentials</i> to select a credentials flow variable to supply the ID and secret.
                    </li>
                    <li>
                        <b>Default Credential Provider Chain:</b> Supply credentials using environment variables or a credentials
                        configuration file. For further details see the <a href="https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/credentials.html#credentials-chain">
                        S3 documentation</a>.
                    </li>
                </ul>
        	</option>
        	<option name="Working directory">
	            Specifies the <i>working directory</i> using the path syntax explained above. The working directory must be specified
	            as an absolute path. A working directory allows downstream nodes to access files/folders using <i>relative</i> paths,  
	            i.e. paths that do not have a leading slash. If not specified, the default working directory is "/".
	        </option>
	        <option name="Normalize paths">
	            Determines if the path normalization should be applied. Path normalization eliminates redundant components of a path
	            like, e.g. /a/../b/./c" can be normalized to "/b/c". When these redundant components like "../" or "." are part of an
	            existing object, then normalization must be deactivated in order to access them properly.
	        </option>
        </tab>
        <tab name="Advanced">
        	<option name="Use path-style requests">
        		If chosen, buckets will be accessed by appending their name to the path of the endpoint URL. Otherwise, they
        		will be accessed by prepending their name as a subdomain in the URL hostname. The correct choice depends on how your
        		S3-compatible endpoint is set up, but in most cases you will want to use path-style requests.
        		For further explanation see the
        		<a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html">S3 documentation</a>.
        	</option>
        	<option name="Region">
        		Optional region to set on the client. Might be empty, depending on how your S3-compatible endpoint is set up.
        	</option>
        	<option name="Connection timeout in seconds">
        		The amount of time to wait when initially establishing a connection before giving up and timing out. For further details see the 
            	<a href="https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/ClientConfiguration.html#setConnectionTimeout-int-">S3 documentation</a>.
        	</option>
        	<option name="Read/write timeout in seconds">The socket read/write timeout. For further details see the 
            	<a href="https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/ClientConfiguration.html#setSocketTimeout-int-">S3 documentation</a>.
        	</option>
        	<option name="Server-side encryption (SSE)">If selected, all data written to the endpoint will be encrypted with 
        		<a href ="https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html">Server-side encryption (SSE)</a> using SSE-S3, SSE-KMS or SSE-C.
        	</option>
        	<option name="Use default managed key">If SSE-KMS is selected as the SSE method, then this option specifies whether or not to
    	    	encrypt data with the default managed CMK.
        	</option>
        	<option name="KMS key id">If SSE-KMS is selected as the SSE method and the default managed CMK should <b>not</b> be used, then
        	this option allows to choose the KMS key with which to encrypt data written to the endpoint. Click on <i>List keys</i> to fetch the list of available
        	keys (requires permissions <tt>kms:ListKeys</tt>, <tt>kms:DescribeKey</tt> and optionally <tt>kms:ListAliases</tt>).
        	</option>
        	<option name="Customer key">If SSE-C is selected as the SSE method it is necessary to provide an encryption key. There are multiple ways the key
        	could be provided. The base64 encoded key could be entered directly or provided via credentials variable using the encoded key as password
        	(username can be anything or left empty). The third way is to select a file that contains exactly 32 bytes (256 bit) that should be used as key.
        	</option>
        </tab>
    </fullDescription>
	<ports>
        <dynInPort insert-before="0" name="File System Connection" group-identifier="File System Connection"> 
			A file system connection to read the customer key, when <b>SSE-C</b> encryption mode is enabled.
		</dynInPort>  
		<outPort index="0" name="Generic S3 File System Connection">Generic S3 File System Connection</outPort>
	</ports>        
</knimeNode>
